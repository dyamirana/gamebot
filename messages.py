# -*- coding: utf-8 -*-
import settings
import utils
import apifunc
from plugins import gamebot
from random import choice
import time

def answers(helper,text,user_id,attachments,message,user):
    ### PUT UR ANSWERS HERE ###

    if u'–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É' in text or u'–ø—Ä–æ–¥–æ–ª–∂' in text:
        if len(user) <1:
            utils.insert_users(id=user_id,member=helper.api.groups.isMember(group_id=settings.group_id, user_id=user_id), mesallow=0, time=0, game=1, lives=settings.lives, score=0,
                               pics='[]', answer='')
            user = utils.getusers(id=user_id)
        if user[0]['time'] > time.time() or user[0]['lives'] <= 0:
            helper.send_message(user_id=user_id, message=u'–£ —Ç–µ–±—è –∑–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏, –ø–æ–¥–æ–∂–¥–∏ 24 —á–∞—Å–∞.')
            return
        if user[0]['lives'] <= 0 and user[0]['time'] < time.time():
            helper.send_message(user_id=user_id, message=u'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è —Å–Ω–æ–≤–∞ '+u'üíú'*settings.lives+u' –∂–∏–∑–Ω–µ–π')
            utils.insert_users(id=user_id, lives=settings.lives)
        utils.insert_users(id=user_id, game=1)
        photo = gamebot.get_photo(user[0])
        if photo is None:
            helper.send_message(user_id=user_id, message=u'–£ –º–µ–Ω—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –∫–∞—Ä—Ç–∏–Ω–∫–∏, –∑–∞–π–¥–∏ –ø–æ–ø–æ–∑–∂–µ!')
            return
        helper.send_message(user_id=user_id,message=u'–ù–∞–π–¥–∏ –≤—Å–µ –æ—Ç–ª–∏—á–∏—è –∏ –Ω–∞–ø–∏—à–∏ –∏—Ö –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ!',attachments=photo['photo'])
        return

    if len(user)>0:

        if text.isdigit():
            if user[0]['lives'] <= 0 and user[0]['time'] < time.time():
                helper.send_message(user_id=user_id,
                                    message=u'–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —É —Ç–µ–±—è —Å–Ω–æ–≤–∞ ' + u'üíú' * settings.lives + u' –∂–∏–∑–Ω–µ–π')
                utils.insert_users(id=user_id, lives=settings.lives)
                user = utils.getusers(id=user_id)
            if user[0]['time'] > time.time():
                helper.send_message(user_id=user_id, message=u'–£ —Ç–µ–±—è –∑–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏, –ø–æ–¥–æ–∂–¥–∏ 24 —á–∞—Å–∞.')
                return


            if user[0]['game']==0:
                helper.send_message(user_id=user_id, message=u'–£ —Ç–µ–±—è –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞ –∏–≥—Ä–∞, –Ω–∞–ø–∏—à–∏ "–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É"')
                return
            if text == user[0]['answer']:
                utils.insert_users(id=user_id, score=user[0]['score'] + user[0]['lives'],game=0,answer='')
                helper.send_message(user_id=user_id, message=u'–í–µ—Ä–Ω–æ!'+u'\n–¢–≤–æ–π —Å—á–µ—Ç: '+str(user[0]['score'] + user[0]['lives'])+u'\n–ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –∏–≥—Ä—É –Ω–∞–ø–∏—à–∏ "–ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å"')
                return
            else:
                lives = user[0]['lives'] - 1
                if lives<=0:
                    helper.send_message(user_id=user_id, message=u'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n–£ —Ç–µ–±—è –∑–∫–æ–Ω—á–∏–ª–∏—Å—å –∂–∏–∑–Ω–∏, –ø–æ–¥–æ–∂–¥–∏ 24 —á–∞—Å–∞.')
                    utils.insert_users(id=user_id,lives=0,time=time.time()+1)
                    return
                utils.insert_users(id=user_id, lives=lives)
                helper.send_message(user_id=user_id, message=u'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ!\n–£ —Ç–µ–±—è –æ—Å—Ç–∞–ª–æ—Å—å '+u'üíú'*lives+u' –∂–∏–∑–Ω–µ–π')
                return
        elif text in [u'—Å—á—ë—Ç',u'—Å—á–µ—Ç']:
            helper.send_message(user_id=user_id, message=u'–¢–≤–æ–π —Å—á–µ—Ç: '+ str(user[0]['score'])+u' üìä')
            return
        elif u'–∂–∏–∑–Ω' in text:
            if user[0]['lives'] == 0:
                helper.send_message(user_id=user_id, message=u'–£ —Ç–µ–±—è 0 –∂–∏–∑–Ω–µ–π')
                return
            helper.send_message(user_id=user_id, message=u'–£ —Ç–µ–±—è ' + u'üíú' * user[0]['lives'] + u' –∂–∏–∑–Ω–µ–π')
            return
        else:
            helper.send_message(user_id=user_id, message=u'–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏ "–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É". \n–ò–ª–∏ –∂–µ "—Å—á–µ—Ç" –∏–ª–∏ "–∂–∏–∑–Ω–∏" —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
            return
    helper.send_message(user_id=user_id,
                        message=u'–Ø —Ç–µ–±—è –Ω–µ –ø–æ–Ω–∏–º–∞—é! –ï—Å–ª–∏ —Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—É, –Ω–∞–ø–∏—à–∏ "–Ω–∞—á–∞—Ç—å –∏–≥—Ä—É". \n–ò–ª–∏ –∂–µ "—Å—á–µ—Ç" –∏–ª–∏ "–∂–∏–∑–Ω–∏" —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É')
    return
class MessageModule:
    def __init__(self,api):
        self.api = api
        self.functions = apifunc.Functions(api)
        self.send_message = self.functions.send_message

    def answer(self,message):
        user_id = message.user_id
        mess_time = message.date
        read_state = message.read_state

        try:
            text = message.body
        except AttributeError:
            text = ''
        try:
            attachments = []
            for i in message.attachments:
                tpe = {'attype': i['type']}
                tpe.update(i[i['type']])
                attachments.append(tpe)
                del tpe
        except AttributeError:
            attachments = []
        except TypeError:
            attachments = []
        user = utils.getusers(id=user_id)

        if len(user) < 1:
            utils.insert_users(id=user_id, member=self.api.groups.isMember(group_id=settings.group_id, user_id=user_id), mesallow=0, time=0, game=0, lives=settings.lives, score=0,
                               pics='[]', answer='')
            user = utils.getusers(id=user_id)
        if settings.joinpls != '':
            if len(user)<1:
                if self.api.groups.isMember(group_id=settings.group_id, user_id=user_id) == 0:
                    utils.insert_users(id=user_id, member=0, mesallow=1, time=0, game=0, lives=settings.lives, score=0,
                               pics='[]', answer='')
                    self.send_message(user_id=user_id, message=settings.joinpls)
                    return
                else:
                    utils.insert_users(id=user_id, member=1, mesallow=1)

            elif self.api.groups.isMember(group_id=settings.group_id, user_id=user_id) == 0:
                utils.insert_users(id=user_id, member=0, mesallow=1, time=0, game=0, lives=settings.lives, score=0,
                               pics='[]', answer='')
                self.send_message(user_id=user_id, message=settings.joinpls)
                return

        answers(self,text.lower(),user_id,attachments,message,user)






